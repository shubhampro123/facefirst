#***************************************
#Project Information
#**************************************

Project Name: FaceFirst Automation
Technology Stack: Python (3.11v), Selenium,PyCharm
Framework Type: Hybrid-framwork


#********************
#Hybrid Framework Information
#********************
1) Script Development & Folder Structure:
	A) All_POM_Package: In this folder, we define all the Selenium actions and create separate functions for each test case. All module folders are created separately.
	B) All_Test_Cases_Package: In this folder, we defined all test cases, and each module is separated by folder.
	C) Application Logs: In this folder, all logs were stored.
	D) Config_Package: In this folder, two packages are present: Excel config files in this package's xlutils file are defined, and ini config files in that package's read function are 	created for reading the ini file.
	E) Reports: In this folder, different reports will be generated in Excel and HTML. A screenshot of failed test cases will also be saved.
	F) Test Data: In this folder, all data-related packages are present. For data-driven test cases, Excel and a CSV file are used. In the data from the INI file, all locators are 	mentioned; create a separate file for each page.

2) Test Execution:

	1) Run in IDE: Run test cases with specific class-specific module test cases.
	2) Run-through Markers: We separate test cases into p1, p2, p3, p4, and p5. If we want to run only p1 test cases, then the below command is used:
	(in console): >> pytest -v -s -m "p1"
	3) Please also find the last execution status under <<Result.html>>


3) Last Automation Package Contains Following:

3.1: Framework Upgradation:

NA

3.2: Module Level Information

**************************************

IMP Note* => Login Username and password :
			1) Before run any test cases change username and passowrd 
			 > Test_Data > Data_From_INI >Portal_Menu.ini > [PORTAL_LOGIN_PAGE_DATA] > a) username b) passowrd
	 
**************************************

1) Portal menu module prerequisites:
	1) Enable the Analytics/Dashboard option in deployment manager.
	2) If you run test cases on a new build, change the copyright validation data in the INI file.
	> Test_Data > Data_From_INI > Portal_Menu.ini > [Portal_Menu_Validation_LOCATORS] >
		a) copyright_version_text_validation = v7.3.0.76
		b) copyright_year_text_validation= 2023 FaceFirst, Inc.

1) Portal-Menu:
	A) Test cases count:31
	B) P1 test cases: 27
	C) P2 test cases:4

**************************************

2) Tags module prerequisites:
	1) For creating tags in the tags module, data is provided from an Excel sheet.
	2) You pass the test data from this Excel sheet for serious event tags and non - serious event tags.
	> Test_Data > Data_From_Excel > Test_Data_XLSX.xlsxÂ 
	Note* => Delete all blank cells in the Excel sheet, then save it.

2) Tags Module:
	A) Test cases count:10
	B) P1 test cases: 9
	C) P2 test cases: 1

**************************************

3) Visitor search jobs module prerequisites:
	1) For search validation, some visitor search is required.
	2) Test data is passed from the ini file >
	> Test_Data > Data_From_INI > VisitorSearchJob_Filter_combination.ini	
	
3) Visitor Search job filter combination:
	A) Test cases count:15
	B) P1 test cases: 15
	C) P2 test cases: 0

**************************************

4) Visitors search module prerequisites :
	1) For search validation, some visitors are required.
	2) Change the end date and end time to the current time and date in the test data.
	3) Test data is passed from the ini file >
	> Test_Data > Data_From_INI > Visitor_Search.ini

4) Visitor Search Module:
	A) Test cases count:128
	B) P1 test cases:
	C) P2 test cases: 

**************************************

5) Enrollment search filter module prerequisites :
	1) For search validation, some enrollment is required with an expiration date.
	2) Change the start date, month, hour, minute, period, and end date, month, hour, minute, period, as current time and date in the test data.
	3) Test data is passed from the ini file >
	> Test_Data > Data_From_INI > Enrollments.ini
	note* => as per enrollment date, set search test data.

5) Enrollments Search filter combination:
	A) Test cases count:128
	B) P1 test cases: 128
	C) P2 test cases: 0

**************************************

6) visitors filter module prerequisites :
	1) For search validation, some visitors are required.
	2) Change the start date, month, hour, minute, period, and end date, month, hour, minute, period, as current time and date in the test data.
	3) Test data is passed from the ini file >
	> Test_Data > Data_From_INI > visitors.ini
	note* => as per visitors date set search test data.

6) Visitors Search filter combination:
	A) Test cases count:16
	B) P1 test cases: 16
	C) P2 test cases: 0

**************************************

7) Notes filter module prerequisites :
	1) For search validation, some notes are required.
	2) Test data is passed from the ini file >
	> Test_Data > Data_From_INI > Notes_Search_Filter_Combination.ini
	3)location_or_store , case_or_subject, sort_by_location_or_store, sort_by_case_or_subject 

7) Notes Search filter combination:
	A) Test cases count:16
	B) P1 test cases: 16
	C) P2 test cases: 0

**************************************
7) Event filter module prerequisites :
	1) For search validation, some Event are required.
	2) Test data is passed from the ini file >
	> Test_Data > Data_From_INI > Notes_Search_Filter_Combination.ini
	3)enrollment_group, zone,tags, start and end date, time, period
	
8) Event Search filter combination:
	A) Test cases count:16
	B) P1 test cases: 16
	C) P2 test cases: 0

**************************************
	
9) Identify and enroll module:
	A) Test cases count:131
	B) P1 test cases: 131
	C) P2 test cases: 0

**************************************	




